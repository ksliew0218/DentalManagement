@model DentalManagement.ViewModels.DashboardViewModel
@{
    ViewData["Title"] = "Appointment Dashboard";
}

<div class="container-fluid mt-4">
    <h2 class="mb-4"><i class="bi bi-speedometer2"></i> Appointment Dashboard</h2>
    
    <!-- Stats Cards -->
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card bg-primary text-white shadow">
                <div class="card-body">
                    <h5 class="card-title">Scheduled</h5>
                    <h1 class="display-4">@Model.TotalScheduledAppointments</h1>
                    <p class="card-text">Total scheduled appointments</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-success text-white shadow">
                <div class="card-body">
                    <h5 class="card-title">Completed</h5>
                    <h1 class="display-4">@Model.TotalCompletedAppointments</h1>
                    <p class="card-text">Total completed appointments</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card bg-danger text-white shadow">
                <div class="card-body">
                    <h5 class="card-title">Cancelled</h5>
                    <h1 class="display-4">@Model.TotalCancelledAppointments</h1>
                    <p class="card-text">Total cancelled appointments</p>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Today's Appointments -->
    <div class="card shadow mb-4">
        <div class="card-header bg-info text-white">
            <h4 class="mb-0"><i class="bi bi-calendar-day"></i> Today's Appointments</h4>
        </div>
        <div class="card-body">
            @if (Model.TodayAppointments.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Time</th>
                                <th>Patient</th>
                                <th>Doctor</th>
                                <th>Treatment</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var appointment in Model.TodayAppointments)
                            {
                                <tr>
                                    <td>@appointment.AppointmentTime.ToString("hh:mm tt")</td>
                                    <td>@appointment.Patient.FirstName @appointment.Patient.LastName</td>
                                    <td>Dr. @appointment.Doctor.FirstName @appointment.Doctor.LastName</td>
                                    <td>@appointment.TreatmentType.Name</td>
                                    <td>
                                        @switch (appointment.Status)
                                        {
                                            case "Scheduled":
                                                <span class="badge bg-primary">Scheduled</span>
                                                break;
                                            case "Confirmed":
                                                <span class="badge bg-info">Confirmed</span>
                                                break;
                                            case "Completed":
                                                <span class="badge bg-success">Completed</span>
                                                break;
                                            case "Cancelled":
                                                <span class="badge bg-danger">Cancelled</span>
                                                break;
                                            case "Rescheduled":
                                                <span class="badge bg-warning text-dark">Rescheduled</span>
                                                break;
                                            case "No-Show":
                                                <span class="badge bg-dark">No-Show</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">@appointment.Status</span>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        <a asp-action="Details" asp-route-id="@appointment.Id" class="btn btn-sm btn-info">
                                            <i class="bi bi-eye"></i>
                                        </a>
                                        <a asp-action="Edit" asp-route-id="@appointment.Id" class="btn btn-sm btn-primary">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="bi bi-info-circle"></i> No appointments scheduled for today.
                </div>
            }
        </div>
    </div>
    
    <!-- Quick Links -->
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow">
                <div class="card-header bg-dark text-white">
                    <h4 class="mb-0"><i class="bi bi-link-45deg"></i> Quick Links</h4>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 mb-3">
                            <a asp-action="Create" class="btn btn-primary btn-lg w-100">
                                <i class="bi bi-plus-circle"></i> New Appointment
                            </a>
                        </div>
                        <div class="col-md-3 mb-3">
                            <a asp-action="Calendar" class="btn btn-info btn-lg w-100">
                                <i class="bi bi-calendar-week"></i> Calendar View
                            </a>
                        </div>
                        <div class="col-md-3 mb-3">
                            <a asp-action="Index" class="btn btn-success btn-lg w-100">
                                <i class="bi bi-list-ul"></i> All Appointments
                            </a>
                        </div>
                        <div class="col-md-3 mb-3">
                            <a asp-controller="Doctor" asp-action="Index" class="btn btn-secondary btn-lg w-100">
                                <i class="bi bi-person-badge"></i> Doctors
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Simple script to highlight upcoming appointments
        document.addEventListener('DOMContentLoaded', function() {
            const now = new Date();
            const currentHour = now.getHours();
            const currentMinute = now.getMinutes();
            
            document.querySelectorAll('table tbody tr').forEach(row => {
                const timeText = row.querySelector('td:first-child').textContent;
                const [hour, minute] = timeText.match(/(\d+):(\d+)/).slice(1, 3).map(Number);
                const isPM = timeText.includes('PM');
                
                // Convert to 24-hour format for comparison
                const appointmentHour = isPM && hour !== 12 ? hour + 12 : (hour === 12 && !isPM ? 0 : hour);
                
                // Upcoming appointments (within next hour)
                if ((appointmentHour === currentHour && minute > currentMinute) || 
                    (appointmentHour === currentHour + 1 && minute <= currentMinute)) {
                    row.classList.add('table-warning');
                }
                
                // Current appointment
                if (appointmentHour === currentHour && Math.abs(minute - currentMinute) <= 15) {
                    row.classList.remove('table-warning');
                    row.classList.add('table-primary', 'fw-bold');
                }
            });
        });
    </script>
} 