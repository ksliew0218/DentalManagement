@model DentalManagement.Models.TreatmentType

@{
    ViewData["Title"] = "Create Treatment";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb breadcrumb-custom">
            <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
            <li class="breadcrumb-item"><a asp-action="Index">Treatment Types</a></li>
            <li class="breadcrumb-item active">Create Treatment</li>
        </ol>
    </nav>
    
    <div class="page-header">
        <div>
            <h1><i class="bi bi-clipboard2-plus me-2 text-primary"></i>Create Treatment</h1>
            <p class="text-muted mb-0">Add a new treatment type to the system</p>
        </div>
    </div>

    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-white py-3">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="bi bi-pencil-square me-2"></i>Treatment Details
            </h6>
        </div>
        <div class="card-body">
            <form asp-action="Create" class="needs-validation" enctype="multipart/form-data" novalidate>
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label class="form-label">Treatment Template</label>
                            <select id="treatmentTemplate" class="form-select mb-2">
                                <option value="" selected>-- Select a template or create custom --</option>
                                <option value="cleaning">Dental Cleaning</option>
                                <option value="rootcanal">Root Canal</option>
                                <option value="extraction">Tooth Extraction</option>
                                <option value="implant">Dental Implant</option>
                                <option value="braces">Braces Installation</option>
                                <option value="whitening">Teeth Whitening</option>
                                <option value="filling">Dental Filling</option>
                                <option value="crown">Dental Crown</option>
                            </select>
                            <small class="text-muted">Select a template or create a custom treatment below</small>
                        </div>
                    </div>
                </div>

                <hr class="my-4">

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label class="form-label">Name <span class="text-danger">*</span></label>
                            <input asp-for="Name" class="form-control" required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <div class="invalid-feedback">Please enter a treatment name</div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label class="form-label">Price (RM) <span class="text-danger">*</span></label>
                            <input asp-for="Price" type="number" step="0.01" class="form-control" required />
                            <span asp-validation-for="Price" class="text-danger"></span>
                            <div class="invalid-feedback">Please enter a valid price</div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label class="form-label">Duration (Minutes) <span class="text-danger">*</span></label>
                            <input asp-for="Duration" type="number" class="form-control" required />
                            <span asp-validation-for="Duration" class="text-danger"></span>
                            <div class="invalid-feedback">Please enter the duration in minutes</div>
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <div class="form-group">
                            <label class="form-label">Active Status</label>
                            <select asp-for="IsActive" class="form-select">
                                <option value="true">Active</option>
                                <option value="false">Inactive</option>
                            </select>
                            <span asp-validation-for="IsActive" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12 mb-3">
                        <div class="form-group">
                            <label class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-12 mb-4">
                        <div class="form-group">
                            <label class="form-label">Treatment Image <small class="text-muted">(Optional)</small></label>
                            <input type="file" name="ImageFile" class="form-control" accept="image/*" data-val="false" />
                            <small class="text-muted">Upload an image for this treatment (optional). Recommended size: 800x600 pixels.</small>
                            <div id="imagePreview" class="mt-2" style="display: none;">
                                <div class="card">
                                    <div class="card-header bg-light">
                                        <span>Image Preview</span>
                                    </div>
                                    <div class="card-body p-2" id="previewContent">
                                        
                                    </div>
                                </div>
                            </div>
                            <div id="imageUploadError" class="text-danger mt-1" style="display: none;">
                                <i class="bi bi-exclamation-circle me-1"></i>
                                <span>Error uploading image. Please try again with a different image.</span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-12 mb-4">
                        <div class="form-group">
                            <label class="form-label d-block mb-2">Assign Doctors <span class="text-danger">*</span></label>
                            
                            <div class="card">
                                <div class="card-header bg-light">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <span>Select doctors who can perform this treatment</span>
                                        <span class="badge bg-primary" id="selectedDoctorsCount">0 selected</span>
                                    </div>
                                </div>
                                <div class="card-body p-0">
                                    <div class="list-group list-group-flush doctor-selection">
                                        <select name="DoctorIds" id="doctorSelection" class="form-select d-none" multiple asp-items="ViewBag.DoctorIds" required>
                                        </select>
                                        
                                        @foreach (var item in ViewBag.DoctorIds)
                                        {
                                            <div class="list-group-item doctor-item" data-doctor-id="@item.Value">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <i class="bi bi-person-badge me-2"></i>
                                                        @item.Text
                                                    </div>
                                                    <div>
                                                        <button type="button" class="btn btn-sm btn-success add-doctor">
                                                            <i class="bi bi-plus-circle"></i> Add
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="invalid-feedback">Please assign at least one doctor</div>
                        </div>
                    </div>
                </div>

                <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                    <a asp-action="Index" class="btn btn-outline-secondary me-md-2">
                        <i class="bi bi-arrow-left"></i> Back to Treatments
                    </a>
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <span class="spinner-border spinner-border-sm d-none me-2" id="submitSpinner" role="status" aria-hidden="true"></span>
                        <i class="bi bi-save"></i> Save Treatment
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            const submitBtn = document.getElementById('submitBtn');
            const submitSpinner = document.getElementById('submitSpinner');
            
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        } else {
                            submitBtn.disabled = true;
                            submitSpinner.classList.remove('d-none');
                            submitBtn.innerHTML = submitBtn.innerHTML.replace('Save Treatment', 'Saving...');
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()

        document.getElementById('treatmentTemplate').addEventListener('change', function() {
            const template = this.value;
            const nameInput = document.querySelector('[name="Name"]');
            const priceInput = document.querySelector('[name="Price"]');
            const durationInput = document.querySelector('[name="Duration"]');
            const descriptionInput = document.querySelector('[name="Description"]');
            
            if (!template) {
                nameInput.value = '';
                priceInput.value = '';
                durationInput.value = '';
                descriptionInput.value = '';
                return;
            }
            
            switch(template) {
                case 'cleaning':
                    nameInput.value = 'Dental Cleaning';
                    priceInput.value = '120.00';
                    durationInput.value = '60';
                    descriptionInput.value = 'Regular dental cleaning and check-up to remove plaque and tartar.';
                    break;
                case 'rootcanal':
                    nameInput.value = 'Root Canal';
                    priceInput.value = '800.00';
                    durationInput.value = '120';
                    descriptionInput.value = 'Endodontic treatment for infected tooth pulp to save the natural tooth.';
                    break;
                case 'extraction':
                    nameInput.value = 'Tooth Extraction';
                    priceInput.value = '250.00';
                    durationInput.value = '45';
                    descriptionInput.value = 'Removal of damaged or problematic teeth that cannot be saved.';
                    break;
                case 'implant':
                    nameInput.value = 'Dental Implant';
                    priceInput.value = '1500.00';
                    durationInput.value = '180';
                    descriptionInput.value = 'Surgical component that interfaces with the bone to support dental prosthesis.';
                    break;
                case 'braces':
                    nameInput.value = 'Braces Installation';
                    priceInput.value = '3000.00';
                    durationInput.value = '120';
                    descriptionInput.value = 'Orthodontic treatment to align teeth and correct bite issues.';
                    break;
                case 'whitening':
                    nameInput.value = 'Teeth Whitening';
                    priceInput.value = '350.00';
                    durationInput.value = '90';
                    descriptionInput.value = 'Professional teeth whitening to remove stains and discoloration.';
                    break;
                case 'filling':
                    nameInput.value = 'Dental Filling';
                    priceInput.value = '200.00';
                    durationInput.value = '45';
                    descriptionInput.value = 'Restoration of decayed teeth using composite or amalgam materials.';
                    break;
                case 'crown':
                    nameInput.value = 'Dental Crown';
                    priceInput.value = '600.00';
                    durationInput.value = '90';
                    descriptionInput.value = 'Prosthetic restoration of a damaged tooth to restore its shape, size, and function.';
                    break;
            }
        });
        
        document.addEventListener('DOMContentLoaded', function() {
            const doctorItems = document.querySelectorAll('.doctor-item');
            const doctorSelection = document.getElementById('doctorSelection');
            const selectedDoctorsCount = document.getElementById('selectedDoctorsCount');
            
            updateSelectedCount();
            
            doctorItems.forEach(item => {
                const doctorId = item.getAttribute('data-doctor-id');
                
                const addBtn = item.querySelector('.add-doctor');
                if (addBtn) {
                    addBtn.addEventListener('click', function() {
                        selectDoctor(doctorId, item);
                    });
                }
            });
            
            function selectDoctor(doctorId, item) {
                item.classList.add('selected');
                
                const buttonContainer = item.querySelector('.add-doctor').parentElement;
                buttonContainer.innerHTML = `
                    <button type="button" class="btn btn-sm btn-danger remove-doctor">
                        <i class="bi bi-dash-circle"></i> Remove
                    </button>
                `;
                
                const newRemoveBtn = buttonContainer.querySelector('.remove-doctor');
                newRemoveBtn.addEventListener('click', function() {
                    unselectDoctor(doctorId, item);
                });
                
                for (let i = 0; i < doctorSelection.options.length; i++) {
                    if (doctorSelection.options[i].value === doctorId) {
                        doctorSelection.options[i].selected = true;
                        break;
                    }
                }
                
                updateSelectedCount();
            }
            
            function unselectDoctor(doctorId, item) {
                item.classList.remove('selected');
                
                const buttonContainer = item.querySelector('.remove-doctor').parentElement;
                buttonContainer.innerHTML = `
                    <button type="button" class="btn btn-sm btn-success add-doctor">
                        <i class="bi bi-plus-circle"></i> Add
                    </button>
                `;
                
                const newAddBtn = buttonContainer.querySelector('.add-doctor');
                newAddBtn.addEventListener('click', function() {
                    selectDoctor(doctorId, item);
                });
                
                for (let i = 0; i < doctorSelection.options.length; i++) {
                    if (doctorSelection.options[i].value === doctorId) {
                        doctorSelection.options[i].selected = false;
                        break;
                    }
                }
                
                updateSelectedCount();
            }
            
            function updateSelectedCount() {
                let count = 0;
                for (let i = 0; i < doctorSelection.options.length; i++) {
                    if (doctorSelection.options[i].selected) {
                        count++;
                    }
                }
                selectedDoctorsCount.textContent = count + ' selected';
            }
            
            const imageInput = document.querySelector('input[name="ImageFile"]');
            const imagePreview = document.getElementById('imagePreview');
            const previewContent = document.getElementById('previewContent');
            const imageUploadError = document.getElementById('imageUploadError');
            
            imageInput.addEventListener('change', function() {
                imageUploadError.style.display = 'none';
                
                previewContent.innerHTML = '';
                
                if (this.files && this.files[0]) {
                    const file = this.files[0];
                    
                    if (!file.type.match('image.*')) {
                        imageUploadError.style.display = 'block';
                        imageUploadError.querySelector('span').textContent = 'Please select an image file (JPG, PNG, etc.).';
                        this.value = ''; 
                        return;
                    }
                    
                    if (file.size > 5 * 1024 * 1024) {
                        imageUploadError.style.display = 'block';
                        imageUploadError.querySelector('span').textContent = 'Image size exceeds 5MB. Please select a smaller image.';
                        this.value = ''; 
                        return;
                    }
                    
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.className = 'img-fluid rounded';
                        img.style.maxHeight = '200px';
                        previewContent.appendChild(img);
                        
                        imagePreview.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                } else {
                    imagePreview.style.display = 'none';
                }
            });
        });
    </script>
}