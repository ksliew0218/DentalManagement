@model DentalManagement.Controllers.DoctorTreatmentViewModel

@{
    ViewData["Title"] = "Manage Doctor Assignments";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="container-fluid">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb breadcrumb-custom">
            <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
            <li class="breadcrumb-item"><a asp-controller="TreatmentType" asp-action="Index">Treatments</a></li>
            <li class="breadcrumb-item"><a asp-controller="TreatmentType" asp-action="Details" asp-route-id="@Model.TreatmentType.Id">Treatment Details</a></li>
            <li class="breadcrumb-item active">Manage Doctors</li>
        </ol>
    </nav>

    
    <div class="alert alert-success alert-dismissible fade show mb-4" role="alert" id="successAlert" style="display: none;">
        <i class="bi bi-check-circle-fill me-2"></i>
        <span id="successMessage">Assignment updated successfully!</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    
    <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert" id="errorAlert" style="display: none;">
        <i class="bi bi-exclamation-triangle-fill me-2"></i>
        <span id="errorMessage">An error occurred. Please try again.</span>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

    <div class="card shadow-sm border-0 mb-4">
        <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
            <h5 class="m-0 font-weight-bold text-primary">
                <i class="bi bi-people me-2"></i>Manage Doctor Assignments
            </h5>
            <a asp-controller="TreatmentType" asp-action="Details" asp-route-id="@Model.TreatmentType.Id" class="btn btn-sm btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to Treatment
            </a>
        </div>
        <div class="card-body">
            <div class="mb-4">
                <h4 class="h5 mb-3">Treatment: @Model.TreatmentType.Name</h4>
                <p class="text-muted">
                    @if (string.IsNullOrEmpty(Model.TreatmentType.Description))
                    {
                        <span class="fst-italic">No description provided</span>
                    }
                    else
                    {
                        @Model.TreatmentType.Description
                    }
                </p>
                <div class="d-flex gap-3">
                    <div class="badge bg-primary p-2">
                        <i class="bi bi-cash-coin me-1"></i> RM @Model.TreatmentType.Price.ToString("F2")
                    </div>
                    <div class="badge bg-primary p-2">
                        <i class="bi bi-clock me-1"></i> @Model.TreatmentType.Duration minutes
                    </div>
                    <div class="badge @(Model.TreatmentType.IsActive ? "bg-success" : "bg-secondary") p-2">
                        <i class="bi bi-circle-fill me-1"></i> @(Model.TreatmentType.IsActive ? "Active" : "Inactive")
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <h5 class="mb-0">Available Doctors</h5>
                    <div class="d-flex gap-2">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="showAllDoctors" checked>
                            <label class="form-check-label" for="showAllDoctors">Show all doctors</label>
                        </div>
                        <input type="text" class="form-control form-control-sm" id="doctorSearch" placeholder="Search doctors..." style="width: 200px;">
                    </div>
                </div>
                
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Doctor</th>
                                <th>Specialty</th>
                                <th>Assignment Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var doctor in Model.DoctorAssignments)
                            {
                                <tr class="doctor-row @(doctor.IsAssigned ? "assigned-doctor" : "unassigned-doctor")">
                                    <td>@doctor.DoctorName</td>
                                    <td>@doctor.DoctorSpecialty</td>
                                    <td>
                                        @if (doctor.IsAssigned)
                                        {
                                            <span class="badge @(doctor.IsActive ? "bg-success" : "bg-warning") assignment-status">
                                                @(doctor.IsActive ? "Active" : "Inactive")
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary assignment-status">Not Assigned</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            @if (doctor.IsAssigned)
                                            {
                                                <button type="button" class="btn btn-sm @(doctor.IsActive ? "btn-outline-warning" : "btn-outline-success") toggle-active-btn"
                                                        data-doctor-id="@doctor.DoctorId" 
                                                        data-treatment-id="@Model.TreatmentType.Id"
                                                        data-assignment-id="@doctor.AssignmentId"
                                                        data-is-active="@doctor.IsActive.ToString().ToLower()">
                                                    <i class="bi @(doctor.IsActive ? "bi-pause-circle" : "bi-play-circle")"></i>
                                                    @(doctor.IsActive ? "Deactivate" : "Activate")
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-danger remove-assignment-btn"
                                                        data-doctor-id="@doctor.DoctorId" 
                                                        data-treatment-id="@Model.TreatmentType.Id"
                                                        data-assignment-id="@doctor.AssignmentId">
                                                    <i class="bi bi-trash"></i> Remove
                                                </button>
                                            }
                                            else
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-primary add-assignment-btn"
                                                        data-doctor-id="@doctor.DoctorId" 
                                                        data-treatment-id="@Model.TreatmentType.Id">
                                                    <i class="bi bi-plus-circle"></i> Assign
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            $("#doctorSearch").on("keyup", function() {
                var value = $(this).val().toLowerCase();
                $(".doctor-row").filter(function() {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });
            
            $("#showAllDoctors").on("change", function() {
                if ($(this).is(":checked")) {
                    $(".doctor-row").show();
                } else {
                    $(".unassigned-doctor").hide();
                    $(".assigned-doctor").show();
                }
            });
            
            $(".add-assignment-btn").on("click", function() {
                const doctorId = $(this).data("doctor-id");
                const treatmentId = $(this).data("treatment-id");
                const row = $(this).closest("tr");
                
                $.ajax({
                    url: '@Url.Action("UpdateAssignment", "DoctorTreatment")',
                    type: 'POST',
                    data: {
                        doctorId: doctorId,
                        treatmentTypeId: treatmentId,
                        isAssigned: true,
                        isActive: true
                    },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            row.removeClass("unassigned-doctor").addClass("assigned-doctor");
                            row.find(".assignment-status").removeClass("bg-secondary").addClass("bg-success").text("Active");
                            
                            const btnGroup = row.find(".btn-group");
                            btnGroup.html(`
                                <button type="button" class="btn btn-sm btn-outline-warning toggle-active-btn"
                                        data-doctor-id="${doctorId}" 
                                        data-treatment-id="${treatmentId}"
                                        data-assignment-id="0"
                                        data-is-active="true">
                                    <i class="bi bi-pause-circle"></i> Deactivate
                                </button>
                                <button type="button" class="btn btn-sm btn-outline-danger remove-assignment-btn"
                                        data-doctor-id="${doctorId}" 
                                        data-treatment-id="${treatmentId}"
                                        data-assignment-id="0">
                                    <i class="bi bi-trash"></i> Remove
                                </button>
                            `);
                            
                            attachEventHandlers();
                            
                            showSuccessMessage("Doctor assigned successfully!");
                        } else {
                            showErrorMessage(result.message || "An error occurred while assigning the doctor.");
                        }
                    },
                    error: function() {
                        showErrorMessage("An error occurred while assigning the doctor.");
                    }
                });
            });
            
            function handleRemoveAssignment() {
                const doctorId = $(this).data("doctor-id");
                const treatmentId = $(this).data("treatment-id");
                const row = $(this).closest("tr");
                
                $.ajax({
                    url: '@Url.Action("UpdateAssignment", "DoctorTreatment")',
                    type: 'POST',
                    data: {
                        doctorId: doctorId,
                        treatmentTypeId: treatmentId,
                        isAssigned: false,
                        isActive: false
                    },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            row.removeClass("assigned-doctor").addClass("unassigned-doctor");
                            row.find(".assignment-status").removeClass("bg-success bg-warning").addClass("bg-secondary").text("Not Assigned");
                            
                            const btnGroup = row.find(".btn-group");
                            btnGroup.html(`
                                <button type="button" class="btn btn-sm btn-outline-primary add-assignment-btn"
                                        data-doctor-id="${doctorId}" 
                                        data-treatment-id="${treatmentId}">
                                    <i class="bi bi-plus-circle"></i> Assign
                                </button>
                            `);
                            
                            attachEventHandlers();
                            
                            showSuccessMessage("Doctor assignment removed successfully!");
                        } else {
                            showErrorMessage(result.message || "An error occurred while removing the assignment.");
                        }
                    },
                    error: function() {
                        showErrorMessage("An error occurred while removing the assignment.");
                    }
                });
            }
            
            function handleToggleActive() {
                const doctorId = $(this).data("doctor-id");
                const treatmentId = $(this).data("treatment-id");
                const assignmentId = $(this).data("assignment-id");
                const isActive = $(this).data("is-active") === "true";
                const row = $(this).closest("tr");
                const button = $(this);
                
                $.ajax({
                    url: '@Url.Action("UpdateAssignment", "DoctorTreatment")',
                    type: 'POST',
                    data: {
                        doctorId: doctorId,
                        treatmentTypeId: treatmentId,
                        isAssigned: true,
                        isActive: !isActive
                    },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(result) {
                        if (result.success) {
                            const statusBadge = row.find(".assignment-status");
                            if (isActive) {
                                statusBadge.removeClass("bg-success").addClass("bg-warning").text("Inactive");
                                button.removeClass("btn-outline-warning").addClass("btn-outline-success");
                                button.html('<i class="bi bi-play-circle"></i> Activate');
                                button.data("is-active", "false");
                            } else {
                                statusBadge.removeClass("bg-warning").addClass("bg-success").text("Active");
                                button.removeClass("btn-outline-success").addClass("btn-outline-warning");
                                button.html('<i class="bi bi-pause-circle"></i> Deactivate');
                                button.data("is-active", "true");
                            }
                            
                            showSuccessMessage("Assignment status updated successfully!");
                        } else {
                            showErrorMessage(result.message || "An error occurred while updating the assignment status.");
                        }
                    },
                    error: function() {
                        showErrorMessage("An error occurred while updating the assignment status.");
                    }
                });
            }
            
            function attachEventHandlers() {
                $(".remove-assignment-btn").off("click").on("click", handleRemoveAssignment);
                $(".toggle-active-btn").off("click").on("click", handleToggleActive);
                $(".add-assignment-btn").off("click").on("click", function() {
                    const doctorId = $(this).data("doctor-id");
                    const treatmentId = $(this).data("treatment-id");
                    const row = $(this).closest("tr");
                    
                    $.ajax({
                        url: '@Url.Action("UpdateAssignment", "DoctorTreatment")',
                        type: 'POST',
                        data: {
                            doctorId: doctorId,
                            treatmentTypeId: treatmentId,
                            isAssigned: true,
                            isActive: true
                        },
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(result) {
                            if (result.success) {
                                row.removeClass("unassigned-doctor").addClass("assigned-doctor");
                                row.find(".assignment-status").removeClass("bg-secondary").addClass("bg-success").text("Active");
                                
                                const btnGroup = row.find(".btn-group");
                                btnGroup.html(`
                                    <button type="button" class="btn btn-sm btn-outline-warning toggle-active-btn"
                                            data-doctor-id="${doctorId}" 
                                            data-treatment-id="${treatmentId}"
                                            data-assignment-id="0"
                                            data-is-active="true">
                                        <i class="bi bi-pause-circle"></i> Deactivate
                                    </button>
                                    <button type="button" class="btn btn-sm btn-outline-danger remove-assignment-btn"
                                            data-doctor-id="${doctorId}" 
                                            data-treatment-id="${treatmentId}"
                                            data-assignment-id="0">
                                        <i class="bi bi-trash"></i> Remove
                                    </button>
                                `);
                                
                                attachEventHandlers();
                                
                                showSuccessMessage("Doctor assigned successfully!");
                            } else {
                                showErrorMessage(result.message || "An error occurred while assigning the doctor.");
                            }
                        },
                        error: function() {
                            showErrorMessage("An error occurred while assigning the doctor.");
                        }
                    });
                });
            }
            
            attachEventHandlers();
            
            function showSuccessMessage(message) {
                $("#successMessage").text(message);
                $("#successAlert").fadeIn().delay(3000).fadeOut();
            }
            
            function showErrorMessage(message) {
                $("#errorMessage").text(message);
                $("#errorAlert").fadeIn().delay(3000).fadeOut();
            }
        });
    </script>
    
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
} 