@model DentalManagement.Models.Appointment

@{
    ViewData["Title"] = "Appointment Details";
    Layout = "~/Areas/Doctor/Views/Shared/_DoctorLayout.cshtml";
}

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800 font-weight-bold">
                <i class="bi bi-calendar-check me-2"></i>Appointment Details
            </h1>
            <p class="text-muted">Viewing details for appointment #@Model.Id</p>
        </div>
        <div class="d-flex">
            <a href="@Url.Action("Index", "Appointments", new { area = "Doctor" })" class="btn btn-outline-primary me-2">
                <i class="bi bi-arrow-left me-2"></i>Back to List
            </a>
            <a href="@Url.Action("Calendar", "Appointments", new { area = "Doctor" })" class="btn btn-primary shadow-sm rounded-pill px-4">
                <i class="bi bi-calendar3 fa-sm text-white-50 me-2"></i>Calendar View
            </a>
        </div>
    </div>

    <!-- Status Banner -->
    <div class="alert @GetStatusAlertClass(Model.Status) shadow-sm mb-4 d-flex justify-content-between align-items-center">
        <div>
            <i class="@GetStatusIcon(Model.Status) me-2"></i>
            <strong>Status: @Model.Status</strong>
            @if (Model.Status == "Scheduled")
            {
                <span class="ms-2 small">
                    @TimeUntilAppointment(Model.AppointmentDateTime)
                </span>
            }
        </div>
        <div class="d-flex">
            <div class="dropdown me-2">
                <button class="btn btn-sm btn-outline-primary dropdown-toggle rounded-pill" type="button" id="statusDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="bi bi-pencil me-1"></i>Update Status
                </button>
                <ul class="dropdown-menu dropdown-menu-end shadow" aria-labelledby="statusDropdown">
                    <li><h6 class="dropdown-header">Change status to:</h6></li>
                    <li><a class="dropdown-item" href="@Url.Action("UpdateStatus", "Appointments", new { id = Model.Id, status = "Scheduled", area = "Doctor" })">Scheduled</a></li>
                    <li><a class="dropdown-item" href="@Url.Action("UpdateStatus", "Appointments", new { id = Model.Id, status = "Completed", area = "Doctor" })">Completed</a></li>
                    <li><a class="dropdown-item" href="@Url.Action("UpdateStatus", "Appointments", new { id = Model.Id, status = "Cancelled", area = "Doctor" })">Cancelled</a></li>
                    <li><a class="dropdown-item" href="@Url.Action("UpdateStatus", "Appointments", new { id = Model.Id, status = "No-Show", area = "Doctor" })">No-Show</a></li>
                </ul>
            </div>
            <span class="badge @GetStatusBadgeClass(Model.Status) p-2 rounded-pill">@Model.Status</span>
        </div>
    </div>

    <div class="row">
        <!-- Left Column - Main Details -->
        <div class="col-lg-8">
            <div class="card shadow mb-4 border-0 rounded-lg">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-info-circle me-2"></i>
                        <h6 class="m-0 font-weight-bold">Appointment Information</h6>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <div class="detail-item">
                                <h5 class="text-gray-600 border-bottom pb-2 mb-2"><i class="bi bi-calendar-event me-2 text-primary"></i>Date & Time</h5>
                                <p class="lead mb-1">@Model.AppointmentDate.ToString("MMMM dd, yyyy")</p>
                                <div class="badge badge-pill bg-light text-dark py-2 px-3 shadow-sm border">
                                    <i class="bi bi-clock text-primary me-1"></i> 
                                    @(Model.AppointmentTime.Hours.ToString("00") + ":" + Model.AppointmentTime.Minutes.ToString("00"))
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <div class="detail-item">
                                <h5 class="text-gray-600 border-bottom pb-2 mb-2"><i class="bi bi-hourglass me-2 text-primary"></i>Duration</h5>
                                <p class="lead mb-1">@Model.Duration minutes</p>
                                <small class="text-muted">Estimated end time: @(Model.AppointmentDateTime.AddMinutes(Model.Duration).ToString("hh:mm tt"))</small>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-4">
                            <div class="detail-item">
                                <h5 class="text-gray-600 border-bottom pb-2 mb-2"><i class="bi bi-clipboard-plus me-2 text-primary"></i>Treatment</h5>
                                <div class="card border-0 bg-light rounded-lg">
                                    <div class="card-body">
                                        <h5 class="card-title mb-1">@Model.TreatmentType?.Name</h5>
                                        @if (Model.TreatmentType?.Price > 0)
                                        {
                                            <p class="text-primary font-weight-bold mb-2">RM @Model.TreatmentType?.Price.ToString("0.00")</p>
                                        }
                                        @if (!string.IsNullOrEmpty(Model.TreatmentType?.Description))
                                        {
                                            <p class="card-text small">@Model.TreatmentType?.Description</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-4">
                            <div class="detail-item">
                                <h5 class="text-gray-600 border-bottom pb-2 mb-2"><i class="bi bi-activity me-2 text-primary"></i>Tracking Info</h5>
                                <div class="timeline small">
                                    <div class="timeline-item">
                                        <div class="timeline-marker bg-success"></div>
                                        <div class="timeline-content">
                                            <h6 class="timeline-title mb-0">Created</h6>
                                            <p class="text-muted">@Model.CreatedAt.ToString("MMM dd, yyyy hh:mm tt")</p>
                                        </div>
                                    </div>
                                    @if (Model.UpdatedAt != null)
                                    {
                                        <div class="timeline-item">
                                            <div class="timeline-marker bg-info"></div>
                                            <div class="timeline-content">
                                                <h6 class="timeline-title mb-0">Last Updated</h6>
                                                <p class="text-muted">@Model.UpdatedAt?.ToString("MMM dd, yyyy hh:mm tt")</p>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <div class="row">
                            <div class="col-12 mb-4">
                                <div class="detail-item">
                                    <h5 class="text-gray-600 border-bottom pb-2 mb-2"><i class="bi bi-journal-text me-2 text-primary"></i>Notes</h5>
                                    <div class="p-3 bg-light rounded shadow-sm">
                                        <p class="mb-0">@Model.Notes</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Time Slots Card -->
            @if (Model.TimeSlots.Any())
            {
                <div class="card shadow mb-4 border-0 rounded-lg">
                    <div class="card-header py-3 d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <i class="bi bi-clock-history me-2"></i>
                            <h6 class="m-0 font-weight-bold">Reserved Time Slots</h6>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0" width="100%" cellspacing="0">
                                <thead class="bg-light">
                                    <tr>
                                        <th>Start Time</th>
                                        <th>End Time</th>
                                        <th>Duration</th>
                                        <th class="text-center">Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var slot in Model.TimeSlots)
                                    {
                                        <tr>
                                            <td>@slot.StartTime.ToString("MMM dd, yyyy hh:mm tt")</td>
                                            <td>@slot.EndTime.ToString("MMM dd, yyyy hh:mm tt")</td>
                                            <td>@((slot.EndTime - slot.StartTime).TotalMinutes) min</td>
                                            <td class="text-center">
                                                <span class="badge rounded-pill @(slot.IsBooked ? "bg-primary" : "bg-success") px-3 py-2">
                                                    <i class="bi @(slot.IsBooked ? "bi-lock" : "bi-check-circle") me-1"></i>
                                                    @(slot.IsBooked ? "Booked" : "Available")
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Right Column - Patient Info -->
        <div class="col-lg-4">
            <div class="card shadow mb-4 border-0 rounded-lg">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-person me-2"></i>
                        <h6 class="m-0 font-weight-bold">Patient Information</h6>
                    </div>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        @if (!string.IsNullOrEmpty(Model.Patient?.ProfilePic))
                        {
                            <img class="img-fluid rounded-circle border shadow-sm" 
                                 src="@Model.Patient.ProfilePic" 
                                 alt="Patient Profile" style="width: 120px; height: 120px; object-fit: cover;">
                        }
                        else
                        {
                            <div class="patient-avatar mb-2">
                                @{
                                    var initials = "P";
                                    if (Model.Patient != null)
                                    {
                                        initials = $"{Model.Patient.FirstName?.FirstOrDefault()}{Model.Patient.LastName?.FirstOrDefault()}";
                                    }
                                }
                                @initials
                            </div>
                        }
                        <h4 class="mt-3 font-weight-bold text-gray-800">@Model.Patient?.FirstName @Model.Patient?.LastName</h4>
                        <div class="mt-2">
                            <a href="mailto:@Model.Patient?.User?.Email" class="btn btn-sm btn-outline-primary me-1 rounded-pill">
                                <i class="bi bi-envelope"></i>
                            </a>
                            <a href="tel:@Model.Patient?.PhoneNumber" class="btn btn-sm btn-outline-info me-1 rounded-pill">
                                <i class="bi bi-telephone"></i>
                            </a>
                            <a href="#" class="btn btn-sm btn-outline-secondary rounded-pill">
                                <i class="bi bi-chat"></i>
                            </a>
                        </div>
                    </div>

                    <div class="list-group">
                        <div class="list-group-item bg-light border-0 rounded mb-2">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1"><i class="bi bi-gender-ambiguous text-primary me-2"></i>Gender</h6>
                            </div>
                            <p class="mb-1 font-weight-bold">@Model.Patient?.Gender</p>
                        </div>

                        <div class="list-group-item border-0 rounded mb-2">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1"><i class="bi bi-calendar2-event text-primary me-2"></i>Date of Birth</h6>
                            </div>
                            <p class="mb-1 font-weight-bold">@(Model.Patient?.DateOfBirth.ToString("MMM dd, yyyy"))</p>
                            @if(Model.Patient?.DateOfBirth != null)
                            {
                                <small class="text-muted">Age: @CalculateAge(Model.Patient.DateOfBirth)</small>
                            }
                        </div>

                        <div class="list-group-item bg-light border-0 rounded mb-2">
                            <div class="d-flex w-100 justify-content-between">
                                <h6 class="mb-1"><i class="bi bi-telephone text-primary me-2"></i>Contact</h6>
                            </div>
                            <p class="mb-1 font-weight-bold">@(string.IsNullOrEmpty(Model.Patient?.PhoneNumber) ? "Not provided" : Model.Patient?.PhoneNumber)</p>
                            <p class="mb-1">
                                <a href="mailto:@Model.Patient?.User?.Email" class="text-primary">
                                    @Model.Patient?.User?.Email
                                </a>
                            </p>
                        </div>
                    </div>

                    <div class="mt-4">
                        <a href="#" class="btn btn-outline-primary shadow-sm rounded-pill w-100">
                            <i class="bi bi-clock-history me-2"></i>View Patient History
                        </a>
                    </div>
                </div>
            </div>
            
            <div class="card shadow mb-4 border-0 rounded-lg">
                <div class="card-header py-3 d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <i class="bi bi-journal-text me-2"></i>
                        <h6 class="m-0 font-weight-bold">Treatment Notes</h6>
                    </div>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.Notes))
                    {
                        <div class="p-3 bg-light rounded">
                            <p class="mb-0">@Model.Notes</p>
                        </div>
                    }
                    else
                    {
                        <div class="text-center p-4 text-muted">
                            <i class="bi bi-journal-x fs-3 mb-2"></i>
                            <p>No notes provided by patient</p>
                        </div>
                    }
                    <div class="mt-3">
                        <small class="text-muted"><i class="bi bi-info-circle me-1"></i> Notes are provided by the patient during appointment booking</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Status styles */
        .badge {
            font-weight: 600;
            letter-spacing: 0.3px;
        }
        
        /* Timeline styling */
        .timeline {
            position: relative;
            padding-left: 1.5rem;
        }
        
        .timeline-item {
            position: relative;
            padding-bottom: 1.5rem;
            border-left: 1px solid #e3e6f0;
            padding-left: 1.5rem;
        }
        
        .timeline-item:last-child {
            padding-bottom: 0;
        }
        
        .timeline-marker {
            position: absolute;
            left: -0.55rem;
            width: 1rem;
            height: 1rem;
            border-radius: 50%;
        }
        
        .patient-avatar {
            width: 120px;
            height: 120px;
            margin: 0 auto;
            border-radius: 50%;
            background-color: #4e73df;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2.5rem;
            font-weight: bold;
            box-shadow: 0 .125rem .25rem rgba(0,0,0,.075);
        }
        
        .detail-item h5 {
            font-size: 1rem;
            font-weight: 600;
        }
    </style>
}

@functions {
    string GetStatusAlertClass(string status)
    {
        return status switch
        {
            "Scheduled" => "alert-info",
            "Completed" => "alert-success",
            "Cancelled" => "alert-danger",
            "No-Show" => "alert-warning",
            _ => "alert-secondary"
        };
    }
    
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Scheduled" => "bg-info",
            "Completed" => "bg-success",
            "Cancelled" => "bg-danger",
            "No-Show" => "bg-warning",
            _ => "bg-secondary"
        };
    }
    
    string GetStatusIcon(string status)
    {
        return status switch
        {
            "Scheduled" => "bi bi-calendar-check",
            "Completed" => "bi bi-check-circle",
            "Cancelled" => "bi bi-x-circle",
            "No-Show" => "bi bi-exclamation-triangle",
            _ => "bi bi-question-circle"
        };
    }
    
    string TimeUntilAppointment(DateTime appointmentTime)
    {
        var timeSpan = appointmentTime - DateTime.Now;
        
        if (timeSpan.TotalDays > 1)
            return $"({Math.Floor(timeSpan.TotalDays)} days from now)";
        else if (timeSpan.TotalHours > 1)
            return $"({Math.Floor(timeSpan.TotalHours)} hours from now)";
        else if (timeSpan.TotalMinutes > 1)
            return $"({Math.Floor(timeSpan.TotalMinutes)} minutes from now)";
        else
            return "(starting now)";
    }
    
    int CalculateAge(DateTime dateOfBirth)
    {
        var today = DateTime.Today;
        var age = today.Year - dateOfBirth.Year;
        if (dateOfBirth.Date > today.AddYears(-age))
            age--;
        return age;
    }
} 