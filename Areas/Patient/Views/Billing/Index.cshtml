@model DentalManagement.Areas.Patient.Models.BillingViewModel
@{
    ViewData["Title"] = "Billing & Payments";
    Layout = "~/Areas/Patient/Views/Shared/_PatientLayout.cshtml";
}

<link href="~/css/billing.css" rel="stylesheet" asp-append-version="true">

<div class="dashboard-container">
    <!-- Page Header -->
    <div class="page-header">
        <h2><i class="bi bi-credit-card"></i> Billing & Payments</h2>
        <p class="subtitle">Manage your payment information and history</p>
    </div>
    
    <!-- Alerts -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert-message success">
            <i class="bi bi-check-circle"></i>
            <span>@TempData["SuccessMessage"]</span>
            <button class="close-alert"><i class="bi bi-x"></i></button>
        </div>
    }
    
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert-message error">
            <i class="bi bi-exclamation-circle"></i>
            <span>@TempData["ErrorMessage"]</span>
            <button class="close-alert"><i class="bi bi-x"></i></button>
        </div>
    }
    
    <!-- Billing Summary Cards -->
    <div class="summary-cards">
        <div class="summary-card">
            <div class="summary-icon">
                <i class="bi bi-hourglass-split"></i>
            </div>
            <div class="summary-content">
                <h3>Pending Deposits</h3>
                <p class="summary-count">@Model.PendingDeposits.Count</p>
                <p class="summary-description">Appointments requiring deposit payments</p>
            </div>
        </div>
        
        <div class="summary-card">
            <div class="summary-icon">
                <i class="bi bi-cash-coin"></i>
            </div>
            <div class="summary-content">
                <h3>Outstanding Balances</h3>
                <p class="summary-count">@Model.OutstandingPayments.Count</p>
                <p class="summary-description">Remaining payments for completed treatments</p>
            </div>
        </div>
        
        <div class="summary-card">
            <div class="summary-icon">
                <i class="bi bi-receipt"></i>
            </div>
            <div class="summary-content">
                <h3>Payment History</h3>
                <p class="summary-count">@Model.PaymentHistory.Count</p>
                <p class="summary-description">Total payments processed</p>
            </div>
        </div>
    </div>

    <!-- Filter Tabs -->
    <div class="filter-tabs">
        <button class="filter-tab active" data-tab="pending-deposits">
            <i class="bi bi-hourglass-split"></i> Pending Deposits
        </button>
        <button class="filter-tab" data-tab="outstanding-balances">
            <i class="bi bi-cash-coin"></i> Outstanding Balances
        </button>
        <button class="filter-tab" data-tab="payment-history">
            <i class="bi bi-receipt"></i> Payment History
        </button>
    </div>

    <!-- Pending Deposits Tab -->
    <div class="tab-content active" id="pending-deposits-tab">
        @if (Model?.PendingDeposits != null && Model.PendingDeposits.Any())
        {
            <div class="payments-grid">
                @foreach (var item in Model.PendingDeposits)
                {
                    <div class="payment-card">
                        <div class="payment-header">
                            <div class="date-box">
                                <span class="month">@item.AppointmentDate.ToString("MMM")</span>
                                <span class="day">@item.AppointmentDate.Day</span>
                            </div>
                            <div class="payment-meta">
                                <span class="time">
                                    <i class="bi bi-clock"></i>
                                    @FormatTime(item.AppointmentTime)
                                </span>
                                <span class="payment-status pending">
                                    <i class="bi bi-circle-fill status-icon"></i>
                                    @item.AppointmentStatus
                                </span>
                            </div>
                        </div>
                        
                        <h3 class="treatment-name">@item.TreatmentName</h3>
                        
                        <div class="doctor-info">
                            <i class="bi bi-person-badge"></i>
                            <span>@item.DoctorName</span>
                        </div>
                        
                        <div class="amount-info">
                            <div class="amount-row">
                                <span class="amount-label">Total Cost:</span>
                                <span class="amount-value">RM @item.TotalAmount.ToString("N2")</span>
                            </div>
                            <div class="amount-row">
                                <span class="amount-label">Deposit Due:</span>
                                <span class="amount-value highlight">RM @item.DepositAmount.ToString("N2")</span>
                            </div>
                        </div>
                        
                        <div class="payment-footer">
                            <a href="@Url.Action("Details", "Appointments", new { id = item.AppointmentId })" class="view-details-btn">
                                <i class="bi bi-eye"></i>
                                View Details
                            </a>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-category-card">
                <div class="empty-icon">
                    <i class="bi bi-hourglass-split"></i>
                </div>
                <div class="empty-message">
                    <h3>No Pending Deposits</h3>
                    <p>You don't have any appointments requiring deposit payments at this time.</p>
                </div>
            </div>
        }
    </div>

    <!-- Outstanding Balances Tab -->
    <div class="tab-content" id="outstanding-balances-tab">
        @if (Model?.OutstandingPayments != null && Model.OutstandingPayments.Any())
        {
            <div class="payments-grid">
                @foreach (var item in Model.OutstandingPayments)
                {
                    <div class="payment-card">
                        <div class="payment-header">
                            <div class="date-box">
                                <span class="month">@item.AppointmentDate.ToString("MMM")</span>
                                <span class="day">@item.AppointmentDate.Day</span>
                            </div>
                            <div class="payment-meta">
                                <span class="time">
                                    <i class="bi bi-clock"></i>
                                    @FormatTime(item.AppointmentTime)
                                </span>
                                <span class="payment-status completed">
                                    <i class="bi bi-circle-fill status-icon"></i>
                                    @item.AppointmentStatus
                                </span>
                            </div>
                        </div>
                        
                        <h3 class="treatment-name">@item.TreatmentName</h3>
                        
                        <div class="doctor-info">
                            <i class="bi bi-person-badge"></i>
                            <span>@item.DoctorName</span>
                        </div>
                        
                        <div class="amount-info">
                            <div class="amount-row">
                                <span class="amount-label">Total Cost:</span>
                                <span class="amount-value">RM @item.TotalAmount.ToString("N2")</span>
                            </div>
                            <div class="amount-row">
                                <span class="amount-label">Remaining:</span>
                                <span class="amount-value highlight">RM @item.RemainingAmount.ToString("N2")</span>
                            </div>
                        </div>
                        
                        <div class="payment-footer">
                            <a href="@Url.Action("Details", "Appointments", new { id = item.AppointmentId })" class="view-details-btn">
                                <i class="bi bi-eye"></i>
                                View Details
                            </a>
                        </div>
                        
                        @if (!string.IsNullOrEmpty(item.DepositReceiptUrl))
                        {
                            <div class="receipt-link">
                                <a href="@item.DepositReceiptUrl" target="_blank" class="receipt-btn">
                                    <i class="bi bi-file-earmark-text"></i>
                                    View Deposit Receipt
                                </a>
                            </div>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-category-card">
                <div class="empty-icon">
                    <i class="bi bi-cash-coin"></i>
                </div>
                <div class="empty-message">
                    <h3>No Outstanding Balances</h3>
                    <p>You don't have any completed treatments with outstanding balance payments.</p>
                </div>
            </div>
        }
    </div>

    <!-- Payment History Tab -->
    <div class="tab-content" id="payment-history-tab">
        @if (Model?.PaymentHistory != null && Model.PaymentHistory.Any())
        {
            <div class="payments-grid">
                @foreach (var item in Model.PaymentHistory)
                {
                    <div class="payment-card history">
                        <div class="payment-date">
                            <i class="bi bi-calendar-date"></i>
                            <span>@item.PaymentDate.ToString("MMMM d, yyyy")</span>
                        </div>
                        
                        <div class="payment-type @GetPaymentTypeClass(item.PaymentType)">
                            <i class="bi @GetPaymentTypeIcon(item.PaymentType)"></i>
                            <span>@GetPaymentTypeDisplay(item.PaymentType)</span>
                        </div>
                        
                        <h3 class="treatment-name">@item.TreatmentName</h3>
                        
                        <div class="doctor-info">
                            <i class="bi bi-person-badge"></i>
                            <span>@item.DoctorName</span>
                        </div>
                        
                        <div class="amount-info">
                            <div class="amount-row">
                                <span class="amount-label">Amount:</span>
                                <span class="amount-value @(item.PaymentType == PaymentType.Refund ? "refund" : "")">
                                    @(item.PaymentType == PaymentType.Refund ? "" : "-")RM @item.Amount.ToString("N2")
                                </span>
                            </div>
                            <div class="amount-row">
                                <span class="amount-label">Status:</span>
                                <span class="payment-status-pill @GetStatusClass(item.Status)">
                                    @GetStatusDisplay(item.Status)
                                </span>
                            </div>
                        </div>
                        
                        <div class="payment-footer">
                            <a href="@Url.Action("Details", "Appointments", new { id = item.AppointmentId })" class="view-details-btn">
                                <i class="bi bi-eye"></i>
                                View Appointment
                            </a>
                        </div>
                            
                        @if (!string.IsNullOrEmpty(item.ReceiptUrl) && item.Status == "succeeded")
                        {
                            <div class="receipt-link">
                                <a href="@item.ReceiptUrl" target="_blank" class="receipt-btn">
                                    <i class="bi bi-file-earmark-text"></i>
                                    View Receipt
                                </a>
                            </div>
                        }
                    </div>
                }
            </div>
        }
        else
        {
            <div class="empty-category-card">
                <div class="empty-icon">
                    <i class="bi bi-receipt"></i>
                </div>
                <div class="empty-message">
                    <h3>No Payment History</h3>
                    <p>You don't have any payment records yet.</p>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string FormatTime(TimeSpan time)
    {
        bool isPM = time.Hours >= 12;
        int hour12 = time.Hours % 12;
        if (hour12 == 0) hour12 = 12;
        return $"{hour12}:{time.Minutes:D2} {(isPM ? "PM" : "AM")}";
    }

    string GetPaymentTypeDisplay(PaymentType type)
    {
        return type switch
        {
            PaymentType.Deposit => "Deposit Payment",
            PaymentType.FullPayment => "Final Payment",
            PaymentType.Refund => "Refund",
            _ => type.ToString()
        };
    }
    
    string GetPaymentTypeIcon(PaymentType type)
    {
        return type switch
        {
            PaymentType.Deposit => "bi-wallet2",
            PaymentType.FullPayment => "bi-check-circle",
            PaymentType.Refund => "bi-arrow-counterclockwise",
            _ => "bi-cash"
        };
    }
    
    string GetPaymentTypeClass(PaymentType type)
    {
        return type switch
        {
            PaymentType.Deposit => "deposit",
            PaymentType.FullPayment => "full-payment",
            PaymentType.Refund => "refund",
            _ => ""
        };
    }

    string GetStatusDisplay(string status)
    {
        return status.ToLower() switch
        {
            "succeeded" => "Paid",
            "pending" => "Pending",
            "failed" => "Failed",
            _ => status
        };
    }

    string GetStatusClass(string status)
    {
        return status.ToLower() switch
        {
            "succeeded" => "success",
            "pending" => "pending",
            "failed" => "failed",
            _ => ""
        };
    }
}

@section Scripts {
    <script src="~/js/billing.js" asp-append-version="true"></script>
}