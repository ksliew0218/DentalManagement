@model DentalManagement.Areas.Patient.Models.AppointmentDetailViewModel
@{
    ViewData["Title"] = "Appointment Details";
    Layout = "~/Areas/Patient/Views/Shared/_PatientLayout.cshtml";
}

<head>
    <!-- Link to custom CSS files -->
    <link href="~/css/appointment-details.css" rel="stylesheet" asp-append-version="true">
</head>

<div class="appointment-container">
    <!-- Page Header -->
    <div class="page-header">
        <h2><i class="bi bi-calendar-check"></i> Appointment Details</h2>
        <p class="subtitle">View your appointment information</p>
    </div>
    
    <!-- Appointment Status Banner -->
    <div class="status-banner @Model.StatusClass">
        <div class="status-icon">
            <i class="bi bi-circle-fill"></i>
        </div>
        <div class="status-text">
            <h3>@Model.Status</h3>
            <p>
                @if (Model.Status == "Scheduled")
                {
                    <span>Your appointment has been scheduled and is awaiting confirmation.</span>
                }
                else if (Model.Status == "Confirmed")
                {
                    <span>Your appointment has been confirmed by our staff.</span>
                }
                else if (Model.Status == "Completed")
                {
                    <span>Your appointment has been completed. Thank you for visiting us!</span>
                }
                else if (Model.Status == "Cancelled")
                {
                    <span>This appointment has been cancelled.</span>
                }
            </p>
        </div>
    </div>
    
    <!-- Appointment Details Card -->
    <div class="details-card">
        <div class="card-header">
            <h3>Appointment Information</h3>
        </div>
        <div class="details-content">
            <div class="detail-item">
                <div class="detail-icon">
                    <i class="bi bi-hash"></i>
                </div>
                <div class="detail-content">
                    <span class="detail-label">Appointment ID</span>
                    <span class="detail-value">@Model.Id</span>
                </div>
            </div>
            
            <div class="detail-item">
                <div class="detail-icon">
                    <i class="bi bi-clipboard-check"></i>
                </div>
                <div class="detail-content">
                    <span class="detail-label">Treatment</span>
                    <span class="detail-value">@Model.TreatmentName</span>
                    <span class="detail-meta">@Model.TreatmentDuration min â€¢ RM @Model.TreatmentCost</span>
                </div>
            </div>
            
            <div class="detail-item">
                <div class="detail-icon doctor-icon">
                    <i class="bi bi-person-badge"></i>
                </div>
                <div class="detail-content">
                    <span class="detail-label">Doctor</span>
                    <span class="detail-value">@Model.DoctorName</span>
                    <span class="detail-meta">@Model.DoctorSpecialization</span>
                </div>
            </div>
            
            <div class="detail-item">
                <div class="detail-icon date-icon">
                    <i class="bi bi-calendar-event"></i>
                </div>
                <div class="detail-content">
                    <span class="detail-label">Date</span>
                    <span class="detail-value">@Model.FormattedAppointmentDate</span>
                </div>
            </div>
            
            <div class="detail-item">
                <div class="detail-icon time-icon">
                    <i class="bi bi-clock"></i>
                </div>
                <div class="detail-content">
                    <span class="detail-label">Time</span>
                    <span class="detail-value">@Model.FormattedAppointmentTime</span>
                </div>
            </div>
            
            @if (!string.IsNullOrEmpty(Model.Notes))
            {
                <div class="detail-item">
                    <div class="detail-icon">
                        <i class="bi bi-card-text"></i>
                    </div>
                    <div class="detail-content">
                        <span class="detail-label">Special Requests/Notes</span>
                        <span class="detail-value notes">@Model.Notes</span>
                    </div>
                </div>
            }
            
            <div class="detail-item">
                <div class="detail-icon">
                    <i class="bi bi-calendar-plus"></i>
                </div>
                <div class="detail-content">
                    <span class="detail-label">Created On</span>
                    <span class="detail-value">@Model.CreatedOn.ToString("MMM d, yyyy 'at' h:mm tt")</span>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Actions Section -->
    <div class="actions-section">
        @if (Model.Status != "Cancelled" && Model.Status != "Completed" && Model.CanCancel)
        {
            <button class="action-btn cancel-btn" onclick="confirmCancelAppointment(@Model.Id)">
                <i class="bi bi-x-circle"></i> Cancel Appointment
            </button>
        }
        @if (Model.Status == "Cancelled")
        {
            <a href="@Url.Action("Book", "Appointments", new { area = "Patient" })" class="action-btn rebook-btn">
                <i class="bi bi-arrow-repeat"></i> Book New Appointment
            </a>
        }
        <a href="@Url.Action("Index", "Appointments", new { area = "Patient" })" class="action-btn back-btn">
            <i class="bi bi-arrow-left"></i> Back to Appointments
        </a>
    </div>
    
    <!-- Cancel Confirmation Modal -->
    <div class="modal" id="cancel-confirmation-modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3><i class="bi bi-exclamation-triangle"></i> Cancel Appointment</h3>
                <button class="close-modal-btn"><i class="bi bi-x-lg"></i></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to cancel this appointment?</p>
                <div class="warning-message">
                    <i class="bi bi-exclamation-circle"></i>
                    <p>Cancellations must be made at least 24 hours in advance to avoid a cancellation fee.</p>
                </div>
                
                <form id="cancelAppointmentForm" asp-controller="Appointments" asp-action="Cancel" asp-area="Patient" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="appointmentIdInput" name="id" value="" />
                    <div class="modal-actions">
                        <button type="submit">
                            <i class="bi bi-check-circle"></i> Yes, Cancel Appointment
                        </button>
                        <button type="button" id="keep-appointment-btn">
                            <i class="bi bi-x-circle"></i> No, Keep Appointment
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Modal functionality
        document.addEventListener('DOMContentLoaded', function() {
            const modal = document.getElementById('cancel-confirmation-modal');
            const closeBtn = document.querySelector('.close-modal-btn');
            const keepBtn = document.getElementById('keep-appointment-btn');
            
            // Function to open the modal
            window.confirmCancelAppointment = function(appointmentId) {
                document.getElementById('appointmentIdInput').value = appointmentId;
                modal.classList.add('show');
            };
            
            // Function to close the modal
            function closeModal() {
                modal.classList.remove('show');
            }
            
            // Event listeners for closing the modal
            if(closeBtn) closeBtn.addEventListener('click', closeModal);
            if(keepBtn) keepBtn.addEventListener('click', closeModal);
            
            // Close modal when clicking outside the content
            window.addEventListener('click', function(event) {
                if (event.target === modal) {
                    closeModal();
                }
            });
        });
    </script>
} 