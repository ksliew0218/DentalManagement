// <auto-generated />
using System;
using DentalManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DentalManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231108000000_AddAppointmentDocuments")]
    partial class AddAppointmentDocuments
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);
            
            modelBuilder.Entity("DentalManagement.Models.AppointmentDocument", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<int>("AppointmentId")
                    .HasColumnType("integer");

                b.Property<string>("ContentType")
                    .HasColumnType("character varying(200)")
                    .HasMaxLength(200);

                b.Property<string>("DocumentName")
                    .IsRequired()
                    .HasColumnType("character varying(200)")
                    .HasMaxLength(200);

                b.Property<long>("FileSize")
                    .HasColumnType("bigint");

                b.Property<string>("S3Key")
                    .IsRequired()
                    .HasColumnType("character varying(500)")
                    .HasMaxLength(500);

                b.Property<DateTime>("UploadedDate")
                    .HasColumnType("timestamp without time zone");

                b.Property<string>("UploadedBy")
                    .HasColumnType("character varying(500)")
                    .HasMaxLength(500);

                b.HasKey("Id");

                b.HasIndex("AppointmentId");

                b.ToTable("AppointmentDocuments");
            });
        }
    }
} 